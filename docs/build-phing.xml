<?xml version="1.0" encoding="UTF-8"?>
<project name="phpcompatinfo" default="help" basedir=".">

    <!-- TIP found in ticket#62 (http://www.phing.info/trac/ticket/62) -->
    <php function="dirname" returnProperty="phing.buildfile.dirname">
        <param value="${phing.file}"/>
    </php>

    <php function="file_get_contents" returnProperty="file.contents">
        <param value="phing/tasks/ext/GrowlNotifyTask.php"/>
        <param value="true"/>
    </php>

    <condition property="growl.task.available">
        <not>
            <isfalse value="${file.contents}" />
        </not>
    </condition>

    <property name="default.properties" value="${phing.buildfile.dirname}/local.win.properties"/>
    <property file="${default.properties}"/>

    <target name="help">
        <echo>Target                   Description</echo>
        <echo>------------------------------------------------------------------</echo>
        <echo>clean-docs               Remove old html generated files</echo>
        <echo>make-docs                Build the documentation of PHP_CompatInfo</echo>
        <echo>make-full-docs           Build the full documentation of PHP_CompatInfo</echo>
        <echo>make-userguide           Build the user guide</echo>
        <echo>make-userguide-all       Build the user guide in all formats</echo>
        <echo>make-userguide-chunked   Build the user guide in many HTML files</echo>
        <echo>make-userguide-htmlhelp  Build the user guide in CHM format</echo>
        <echo>make-userguide-pdf       Build the user guide in PDF format</echo>
        <echo>make-userguide-epub      Build the user guide in EPUB format</echo>
    </target>

    <target name="notify" if="growl.task.available">

        <taskdef name="growlnotify" classname="phing.tasks.ext.GrowlNotifyTask" />

        <growlnotify message="${growl.message}"
            title="PhingNotify"
            priority="high"
            sticky="true"
            appicon="./growlPhing.png"
        />

    </target>

    <target name="make-userguide-all"
            depends="make-userguide, make-userguide-chunked, make-userguide-htmlhelp, make-userguide-pdf"
            description="Build the user guide in all formats">

    </target>

    <target name="make-userguide"
            description="Build the user guide">

        <exec dir="${asciidoc.home}"
            command="asciidoc.py -a linkcss -a icons -a theme=${theme} -a toc2 -n -o ${output.dir}/phpci-book.html ${homedir}/docs/phpci-book.txt"
        />
        <zip destfile="${output.dir}/phpci-book.html.zip">
            <fileset dir="${output.dir}">
                <include name="images/**" />
                <include name="js/asciidoc.js" />
                <include name="styles/pygments.css" />
                <include name="styles/toc2.css" />
                <include name="styles/${theme}.css" />
                <include name="phpci-book.html" />
                <exclude name="**/callouts/**" />
                <exclude name="styles.css" />
                <exclude name="**/Thumbs.db" />
            </fileset>
        </zip>

    </target>

    <target name="make-userguide-chunked"
            description="Build the user guide in many HTML files">

        <exec dir="${asciidoc.home}"
            command="a2x.py -L --icons --stylesheet=./stylesheets/docbook-xsl.css -d book -f chunked -D ${output.dir} ${homedir}/docs/phpci-book.txt"
        />
        <zip destfile="${output.dir}/phpci-book.chunked.zip">
            <fileset dir="${output.dir}">
                <include name="phpci-book.chunked/**" />
                <exclude name="phpci-book.chunked/**/Thumbs.db" />
            </fileset>
        </zip>
        <delete dir="${output.dir}/phpci-book.chunked" />

    </target>

    <target name="make-userguide-htmlhelp"
            description="Build the user guide in CHM format">

        <exec dir="${asciidoc.home}"
            command="a2x.py -L --icons --stylesheet=./stylesheets/docbook-xsl.css -d book -f htmlhelp -D ${output.dir} ${homedir}/docs/phpci-book.txt"
        />

        <exec dir="${htmlhelpworkshop}"
            command="hhc.exe ${output.dir}/phpci-book.hhp"
        />
        <zip destfile="${output.dir}/phpci-book.chm.zip">
            <fileset dir="${output.dir}">
                <include name="phpci-book.chm" />
            </fileset>
        </zip>
        <delete>
            <fileset dir="${output.dir}">
                <include name="phpci-book.chm" />
                <include name="phpci-book.hhc" />
                <include name="phpci-book.hhk" />
                <include name="phpci-book.hhp" />
            </fileset>
        </delete>
        <delete dir="${output.dir}/phpci-book.htmlhelp" />

    </target>

    <target name="make-userguide-pdf"
            description="Build the user guide in PDF format">

        <exec dir="${asciidoc.home}"
            command="a2x.py -L --icons --stylesheet=./stylesheets/docbook-xsl.css -d book -f pdf --fop -D ${output.dir} ${homedir}/docs/phpci-book.txt"
        />

    </target>

    <target name="make-userguide-epub"
            description="Build the user guide in english PDF format">

        <exec dir="${asciidoc.home}"
            command="a2x.py --verbose -L --icons -d book -f epub -D ${output.dir} ${homedir}/docs/phpci-book.txt"
        />

    </target>

    <target name="make-docs"
            description="Build the documentation of PHP_CompatInfo">

        <exec dir="${asciidoc.home}"
            command="asciidoc.py -a linkcss -a icons -a theme=${theme} -o ${output.dir}/CHANGELOG.html ${homedir}/docs/CHANGELOG.txt"
        />
        <exec dir="${asciidoc.home}"
            command="asciidoc.py -a linkcss -a icons -a theme=${theme} -o ${output.dir}/INSTALL.html ${homedir}/docs/INSTALL.txt"
        />
        <exec dir="${asciidoc.home}"
            command="asciidoc.py -a linkcss -a icons -a theme=${theme} -o ${output.dir}/LICENSE.html ${homedir}/docs/LICENSE.txt"
        />
        <exec dir="${asciidoc.home}"
            command="asciidoc.py -a linkcss -a icons -a theme=${theme} -a toc2 -n -o ${output.dir}/index.html ${homedir}/docs/index.txt"
        />

    </target>

    <target name="make-full-docs"
            depends="make-docs, make-userguide-all"
            description="Build the full documentation of PHP_CompatInfo">

        <phingcall target="notify">
            <property name="growl.message" value="PHP_CompatInfo full documentation build FINISHED." />
        </phingcall>
    </target>

    <target name="clean-docs"
            description="Remove old html generated files">

        <delete>
            <fileset dir="${homedir}/docs/">
                <include name="*.html" />
            </fileset>
        </delete>

    </target>

</project>